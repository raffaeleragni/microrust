version: '3.9'
services:
  mysql:
    ports: [ "3306:3306" ]
    image: 'mysql'
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=api
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 1s
      timeout: 1s
      retries: 60
  zookeeper:
    image: 'zookeeper'
  kafka:
    ports: [ "9092:9092", "9094:9094" ]
    depends_on: [ 'zookeeper' ]
    image: 'confluentinc/cp-kafka'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  kafka-init:
    depends_on: [ 'kafka' ]
    image: 'confluentinc/cp-kafka'
    entrypoint:
      - /bin/bash
      - '-c'
    command: |-
      "
      kafka-topics --bootstrap-server kafka:9092 --list
      function create {
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --replication-factor 1 --partitions 1 --topic $1
      }

      create products

      echo 'kafka topics created'
      "
  migrate:
    restart: on-failure
    depends_on:
      mysql:
        condition: service_healthy
    build:
      context: .
      dockerfile_inline: |
        FROM rust
        RUN cargo install sqlx-cli
        WORKDIR /
    volumes:
      - ./api/migrations:/migrations
    command: sqlx migrate run --database-url mysql://root:root@mysql/api
